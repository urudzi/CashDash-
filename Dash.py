import random
import time
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler

# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
promo_codes = ['THXY', '10X0', 'SXXS']

# –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
registration_link = "https://1warlo.top/casino/list?open=register&p=7paw"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
async def start(update: Update, context):
    keyboard = [
        [InlineKeyboardButton("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data='registration_menu')],
        [InlineKeyboardButton("üéÅ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞", callback_data='promo_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("üí∞ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç CashDASH. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å! üí∏", reply_markup=reply_markup)

# –ú–µ–Ω—é –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
async def registration_menu(update: Update, context):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üöÄ –ü–æ–ª—É—á–∏—Ç—å", callback_data='registration')],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(text="üîó –ü–æ–ª—É—á–∏ —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –Ω–∞—á–Ω–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å! üí∏", reply_markup=reply_markup)

# –ú–µ–Ω—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
async def promo_menu(update: Update, context):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data='promo')],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(text="üéÅ –Ø —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–±–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ +500% –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é. –ì–æ—Ç–æ–≤? üí•", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
async def button(update: Update, context):
    query = update.callback_query
    await query.answer()

    if query.data == 'main_menu':
        await start(update, context)

    elif query.data == 'registration_menu':
        await registration_menu(update, context)

    elif query.data == 'promo_menu':
        await promo_menu(update, context)

    elif query.data == 'registration':
        # –û–ø–∏—Å–∞–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∞
        keyboard = [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(text=f"üîó –¢–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: [{registration_link}](https://{registration_link})", reply_markup=reply_markup, parse_mode="Markdown")

    elif query.data == 'promo':
        # –ê–Ω–∏–º–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
        await query.edit_message_text(text="üé≤ –ò–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è... 0%")

        loading_time = random.randint(7, 15)  # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –º–µ–∂–¥—É 7 –∏ 15 —Å–µ–∫—É–Ω–¥–∞–º–∏
        progress_bar_length = 10  # –î–ª–∏–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞

        for i in range(1, 101, 1):  # –®–∞–≥ –≤ 1%
            progress_bar = '|' * (i // 10) + '.' * (progress_bar_length - (i // 10))
            await query.edit_message_text(text=f"üé≤ –ò–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è... {i}% {progress_bar}")
            time.sleep(loading_time / 50)  # –£–≤–µ–ª–∏—á–µ–Ω–æ –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏

        promo_code = random.choice(promo_codes)  # –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
        keyboard = [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(text=f"üéÅ –¢–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥: [{promo_code}](https://t.me/share/url?url={promo_code})", reply_markup=reply_markup, parse_mode="Markdown")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    application = ApplicationBuilder().token("7836847076:AAHVcgjHmMErXbyUIcqt__PpceYyHfraoi8").build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º polling
    application.run_polling()

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == '__main__':
    main()